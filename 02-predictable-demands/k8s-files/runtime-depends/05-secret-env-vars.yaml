# 1. Define the Secret resource
# Note  that the data values are Base64-encoded. This is required by Kubernetes for Secret objects.
# To encode your own values:
# echo -n 'my-secret-value' | base64
apiVersion: v1
kind : Secret
metadata:
  name: db-credentials
type: Opaque # Default type for arbitrary user-defined data
data:
  # The key is 'username' and the value is the base64 encoded string for 'admin'
  username: YWRtaW4=
  # The key is 'password' and the value is the base64 encoded string for '1234'
  password: MTIzNA==

--- 

# Define the Pod that consumes the Secret Data as environment variables.
# This Pod has a runtime dependency on th 'db-credentials' Secret.
apiVersion: v1
kind: Pod
metadata:
  name: secret-env-pod
spec:
  containers:
  - name: app-container
    image: busybox
    #This command prints the values of the environment variables to prove they were injected correctly.
    command: [ "/bin/sh", "-c", "echo \"Connecting to database with User: $DB_USER and Password: $DB_PASS\"; sleep 3600" ]
    env:
    # Define an environment variable name DB_USER.
    - name: DB_USER
      valueFrom:
        # Get the value from a reference to a key in a Secret.
        secretKeyRef:
          name: db-credentials # The name of the secret
          key: username # The key within the Secret to use
    # Define an environment variable name DB_PASS.
    - name: DB_PASS
      valueFrom:
        # Get the value from a reference to a key in a Secret.
        secretKeyRef:
          name: db-credentials 
          key: password
  restartPolicy: Never 
